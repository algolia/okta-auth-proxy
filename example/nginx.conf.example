# Redirect HTTP to HTTPS
server {
  server_name example.com;
  return 301 https://$host$request_uri;
}

# The PROXY
server {
  listen 443 ssl;

  ssl_certificate /etc/ssl/host.pem;
  ssl_certificate_key /etc/ssl/host.key;

  server_name example.com;

  # Proxy all the request to the backend
  location / {
    proxy_cache off;
    proxy_pass "http://127.0.0.1:3311";
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # The backend redirects the request to /reproxy using X-Accel-Redirect
  location /reproxy {
    # Make this location only accessible through an X-Accel-Redirect header
    # External requests to /reproxy will be ignored by Nginx
    # See https://www.nginx.com/resources/wiki/start/topics/examples/x-accel/
    internal;

    # set DNS;
    # resolver 8.8.8.8; # is this even needed?

    # Proxy request to the received X-Reproxy-URL value
    # (Nginx doesn't allow passing $upstream_http_* vars directly to proxy_pass)
    set $reproxy $upstream_http_x_reproxy_url;
    proxy_pass $reproxy;
  }
}
